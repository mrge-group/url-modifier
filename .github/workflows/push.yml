name: Pushed Master Branch
run-name: ${{github.actor}} pushed the a new package

on:
  push:
    branches:
      - master

env:
  XDEBUG_MODE: coverage
  REPORT_PATH: testReports

jobs:
  install-libraries:
    name: Environment Installation
    runs-on: self-hosted
    container: composer
    steps:
      - name: Checkout to cache
        uses: actions/checkout@v4

      - name: Cache Composer libraries
        id: cache-composer
        uses: actions/cache@v4
        with:
          key: cache-${{vars.URL_PROJECT}}-composer-${{hashFiles('composer.lock')}}
          path: vendor

      - name: Install Composer libraries
        if: ${{steps.cache-composer.outputs.cache-hit != 'true'}}
        run: |
          composer self-update
          composer install -o --no-scripts
          composer audit

  install-environment:
    name: CI Test Environment Installation
    needs: install-libraries
    runs-on: self-hosted
    steps:
      - name: Checkout to prepare environment
        uses: actions/checkout@v4

      - name: Create test result folder
        run: mkdir -p testReports

      - name: Archive file and folder
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: default-environment-${{vars.URL_PROJECT}}
          path: ${{env.REPORT_PATH}}

  test-package:
    name: Test Package
    needs: install-environment
    runs-on: self-hosted
    container: php:8.1.29-cli-alpine

    steps:
      - name: Checkout to test
        uses: actions/checkout@v4

      - name: Get cached Composer libraries
        uses: actions/cache@v4
        with:
          key: cache-${{vars.URL_PROJECT}}-composer-${{hashFiles('composer.lock')}}
          path: vendor

      - name: Download artifact with file and folder
        uses: actions/download-artifact@v4
        with:
          name: default-environment-${{vars.URL_PROJECT}}

      - name: Run tests
        run: php vendor/bin/phpunit --coverage-php="${{env.REPORT_PATH}}/coverage.xml" --log-junit="${{env.REPORT_PATH}}/junit.xml"

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: ${{env.REPORT_PATH}}-${{vars.URL_PROJECT}}
          path: ${{env.REPORT_PATH}}

  scan-code:
    name: Scan Code Coverage
    runs-on: self-hosted
    needs: test-package

    steps:
      - name: Checkout to scan
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage file
        uses: actions/download-artifact@v4
        with:
          name: ${{env.REPORT_PATH}}-${{vars.URL_PROJECT}}
          path: ${{env.REPORT_PATH}}

      - name: Scan code with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          SONAR_HOST_URL: ${{secrets.SONAR_HOST_URL}}